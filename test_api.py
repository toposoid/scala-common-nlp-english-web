'''
  Copyright 2021 Linked Ideal LLC.[https://linked-ideal.com/]
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 '''
from fastapi.testclient import TestClient
from api import app
from model import NormalizedWord, SynonymList, FeatureVector
import pytest

#This is a unit test module

class TestVoldAPI(object):

    client = TestClient(app)

    def test_EmptyWord(self):    
        response = self.client.post("/getSynonyms",
                            headers={"Content-Type": "application/json"},
                            json={"word": ""})    
        assert response.status_code == 200
        synonymList = SynonymList.parse_obj(response.json())
        assert synonymList.synonyms == []

    def test_SimpleVerb(self):    
        response = self.client.post("/getSynonyms",
                            headers={"Content-Type": "application/json"},
                            json={"word": "execute"})    
        assert response.status_code == 200
        synonymList = SynonymList.parse_obj(response.json())
        assert synonymList.synonyms.sort() == ['accomplish', 'perform'].sort()

    def test_SimpleNoun(self):    
        response = self.client.post("/getSynonyms",
                            headers={"Content-Type": "application/json"},
                            json={"word": "agreement"})    
        assert response.status_code == 200
        synonymList = SynonymList.parse_obj(response.json())
        assert synonymList.synonyms.sort() == ['accord', 'arrangement'].sort()

    def test_VocabularyNotFoundInWordNet(self):    
        response = self.client.post("/getSynonyms",
                            headers={"Content-Type": "application/json"},
                            json={"word": "research"})    
        assert response.status_code == 200
        synonymList = SynonymList.parse_obj(response.json())
        assert synonymList.synonyms.sort() == ['RESEARCH', 'Studies', 'STUDIES', 'Research', 'studies'].sort()

    def test_VocabularyNotFoundInWord2Vec(self):    
        response = self.client.post("/getSynonyms",
                            headers={"Content-Type": "application/json"},
                            json={"word": "aslkfjg"})    
        assert response.status_code == 200
        synonymList = SynonymList.parse_obj(response.json())
        assert synonymList.synonyms == []

    def test_GetFeatureVector(self):
        import math
        response = self.client.post("/getFeatureVector",
                            headers={"Content-Type": "application/json"},
                            json={"sentence": "This is a test."})    
        assert response.status_code == 200
        featureVector = FeatureVector.parse_obj(response.json())
        correctVector = [-0.08030792,-0.13426998,-0.0131171355,-0.055471413,-0.13784735,0.018687295,0.113157324,0.05909053,0.18047537,0.09854899,0.24261141,-0.040015884,-0.19555734,-0.12732792,0.07901483,0.1311797,-0.10897825,0.10183691,-0.04023331,0.11435972,-0.0988878,-0.12562631,0.051610883,0.054774743,-0.072231114,-0.03274859,-0.059694882,-0.051439192,0.12638001,-0.08310621,0.17978041,0.018675655,-0.10471279,0.0595525,0.01902026,-0.099462785,0.102816276,-0.048282173,-0.1738145,0.1114413,0.003912856,0.28830785,0.06780086,-0.060355924,-0.04787218,-0.070562355,0.08991437,-0.17007692,-0.09358452,0.047927447,0.009206603,0.41955534,-0.25712416,0.035017807,0.2985487,0.05384562,-0.06883323,0.15490279,0.14215763,-0.08272207,0.07911555,-0.04190024,0.19468537,0.15212427,-0.18685642,-0.054087978,0.30747446,0.035124164,-0.16722873,-0.13983832,0.15676577,0.006055371,-0.10317274,0.14092647,0.022121403,-0.108591266,0.26993915,-0.15338944,0.015173051,-0.20100994,-0.040529322,0.1174723,0.026199644,-0.17436396,-0.25265193,0.14316098,-0.0055742073,-0.0016669657,0.020748466,0.060796816,0.07318747,-0.14027484,0.017700082,0.024232643,0.055814058,-0.05753992,-0.19577733,-0.08024013,0.20175742,0.05311526,0.014544257,0.09759059,-0.048254993,0.10778153,-0.04962806,0.09748377,0.14042476,0.097403176,-0.20563014,0.03802457,-0.11474236,0.013621428,0.18488386,-0.1627871,0.11152702,-0.032126185,0.060058553,-0.22292979,-0.0023465913,0.06240093,-0.23009858,0.01833702,-0.009203529,0.02444068,-0.0066179996,0.041616023,-0.053239517,-0.034356255,0.123992205,-0.011343459,0.0032366023,-0.093072094,-0.053871036,0.026187992,-0.005723986,0.021520382,-0.066240005,-0.072145104,0.10663315,-0.17247613,0.030507369,0.046960387,0.10151847,-0.039308112,-0.0033261343,-0.107680954,-0.027924135,-0.04576925,0.04184368,0.16440792,0.21566118,0.10677179,0.16781045,-0.057002265,-0.053111963,0.09220903,0.028648522,-0.14217941,-0.049828064,-0.12122183,0.0849662,-0.15715024,-0.15139696,0.06948726,0.07558049,0.15511963,-0.08552518,-0.011938623,-0.056617204,-0.10250568,-0.1010262,0.14548711,0.038385145,0.23158446,0.0054716235,0.16629513,0.04979673,-0.18799546,0.011014758,-0.014248475,0.019124432,0.10608872,0.16772285,-0.019141512,-0.21320431,0.0688176,-0.06778509,-0.016323712,-0.013769959,0.06379658,-0.11552258,0.014009557,0.094390966,0.14101611,0.025436403,-0.15980735,0.025006235,0.029011384,0.034633208,-0.11401077,0.037261236,-0.08437979,0.16764751,-0.021144027,-0.14451209,-0.054377913,0.11795361,0.0700045,0.103048824,0.10661491,0.3614572,0.0625801,-0.06898157,0.1496868,-0.037759695,0.11562629,-0.030140718,-0.027930379,0.043279476,0.14750984,0.002462287,0.07567786,-0.075582944,0.023843247,-0.17247513,0.02063066,-0.15140617,0.012018559,-0.05136668,-0.035322566,-0.048633832,0.007145461,-0.08811123,-0.0076388726,-0.046421923,-0.10341783,0.13392553,0.15340613,0.09297862,-0.11382317,-0.14039011,-0.021469165,-0.12655734,0.022342386,-0.106986836,-0.06512177,0.1436281,-0.055891395,-0.08857096,-0.08049954,0.037973583,0.09316904,-0.103836715,0.11602109,0.17954613,-0.07917191,-0.03972048,-0.2343074,0.13032968,-0.22399807,-0.0231013,-0.05367878,-0.06746452,-0.067024864,0.24955525,-0.009433602,0.17151107,-0.1680948,0.114138775,-9.813133e-05,0.19826458,-0.09292175,-0.038946915,-0.006913309,0.07471915,0.010469477,-0.15910093,0.030953662,-0.120661914,0.055569787,-0.05553981,-0.14797866,-0.04527342,0.07845456,-0.12842785,0.0782184,0.14839311,0.07455015,0.18224292,0.10695093,0.115469754,-0.00085058727,0.07791956,-0.10147145,0.16387996,-0.10625254,-0.03082508,0.15964223,0.014651381,-0.082659766,-0.017087791,0.022986935,-0.027300516,-0.03147813,-0.028785,0.07326104,0.10939075,-0.27248374,0.059975833,0.13735208,-0.049257524,0.10487844,0.025748312,0.24530554,-0.08749036,-0.093166165,-0.011604526,0.051048238,-0.13856605,-0.11415948,-0.13034323,-0.039399426,0.09396885,-0.058264554,-0.04794198,-0.074289694,0.097924136,0.18457404,0.06410272,0.067696884,0.005950748,-0.11412184,0.13671368,0.0265622,-0.07816487,-0.15520993,-0.027926913,0.061001897,-0.15816452,0.054697424,-0.0508276,-0.24595742,-0.046254795,-0.123561904,-0.07327811,0.08947675,-0.21519418,0.10034833,0.030404119,-0.061621163,0.041675147,0.044610497,-0.025424669,-0.112834096,-0.09681747,-0.03723975,-0.045108963,0.1438394,0.11849155,-0.101040184,-0.042237636,-0.02446283,-0.16766058,0.12786762,-0.20450065,0.11807449,-0.09641353,0.08821952,-0.051292147,-0.0021382463,0.033182155,0.032904953,-0.056706067,0.014013235,0.07974144,0.26775146,0.1488585,-0.12081281,-0.25209928,-0.06625452,0.10532612,-0.45522466,0.03445529,-0.06079214,-0.050157044,-0.053325314,-0.06623632,-0.062251654,-0.013813148,0.08366328,-0.14591546,-0.094089605,-0.0029763193,0.065840125,0.22480209,-0.018793097,0.17122844,0.10027486,-0.0088509405,0.15841602,0.024233537,0.14708398,-0.0135497,0.45881513,-0.0130409,-0.12751868,-0.14336927,0.088780455,-0.10415421,-0.12945172,-0.07269237,-0.04544989,0.1141158,0.013642615,-0.07302607,0.25103685,-0.0018896059,-0.22632425,0.016102144,-0.08489815,-0.025495062,0.17228518,-0.109222755,0.016842043,-0.14675805,-0.06859152,-0.1838616,-0.05768212,0.19105981,0.07399733,-0.011210364,-0.086870715,-0.041509498,0.1224225,-0.3389854,-0.23987497,-0.09251867,0.108849585,0.25691363,-0.12598576,0.075733386,0.02111814,0.31322163,0.07407034,-0.20257124,0.07553981,-0.13637117,-0.0058023143,0.09935217,0.03416792,0.16227193,0.051013794,0.087399326,0.11512906,0.19052646,-0.12827997,0.024271324,-0.15240863,-0.06698319,0.13215251,0.032357864,0.41060582,-0.14820509,0.08537345,0.023854548,0.01832819,-0.18512687,0.022660239,-0.013466405,-0.11092313,-0.11574247,0.12107351,-0.06916464,0.14518675,-0.106400274,0.0010188073,-0.048553374,-0.1434381,-0.03964744,-0.00029481572,0.07786985,-0.10191751,0.02822322,-0.016841168,-0.011817552,0.050241835,0.12317584,-0.093219884,0.009537375,-0.108780086,0.000933446,-0.05225047,-0.008913887,-0.056906674,-0.14108355,0.12943925,-0.119871676,0.039503895,-0.0024717222,-0.10192614,0.18957734,0.101629734,0.0029925543,-0.08098789,-0.052251767,0.24281497,0.05671423,-0.090225056,-0.010881759,-0.22966588,0.053277235,-0.01173961,-0.045135725,0.21909034,0.039526876,-0.11264528,-0.13640311,-0.03584469,0.04807079,-0.08988953,0.1579943,-0.030945709,-0.1597688,-0.07862674,0.18248951,0.019944826,0.0587958,0.0065498515,-0.07878834,0.01717365,0.0009510698,-0.057136867,-0.2740294,0.17209633,-0.0048236465,0.11864955,0.069090314,0.09036178,-0.003912186,-0.35297605,-0.038106795,0.011455767,0.16717324,0.16323714,0.11020749,0.13530304,-0.028364956,-0.046669662,0.05418523,-0.028339695,-0.018154,0.075221196,0.155528,-0.12341745,0.0044389185,-0.14646952,-0.0909495,-0.089279465,0.1453527,-0.16933309,0.06455202,0.091962956,-0.1926242,0.18493262,-0.08718322,-0.06551265,-0.11793389,0.015406057,0.2952324,0.16814038,-0.014871412,-0.04837025,0.07992978,0.18601623,-0.117919624,-0.07486228,-0.08468003,-0.061459728,0.024180712,0.07362182,0.08979338,-0.07444121,0.113797426,-0.0897272,-0.26202884,0.06999736,0.10824461,0.038117435,0.21563594,-0.08821374,0.1017248,0.17834632,-0.08658479,-0.15752593,-0.1781845,-0.0836249,-0.10829403,0.13110317,0.12532778,0.08167602,0.0951343,-0.109253705,-0.054734264,0.016291546,0.044545565,-0.02342348,0.067482464,0.04612815,0.08305917,-0.0064934925,-0.06760106,0.11495701,-0.044477638,-0.16537096,0.16233447,-0.075373106,0.025118496,-0.005880878,0.069590166,-0.093754515,-0.119494915,-0.1289417,-0.23729846,0.06954973,0.25808412,-0.1580944,0.06834353,-0.017740736,0.06334716,0.27818167,-0.047426004,-0.05872256,0.0509437,0.20085175,0.057397094,-0.0046307286,-0.13445623,0.07845317,-0.16908343,0.01488454,-0.097213134,0.05369919,-0.025027217,0.006384179,0.04757123,0.014364938,-0.06651758,0.01810543,-0.0095422,0.09486924,0.11986881,0.08799696,0.043195885,0.086782634,-0.0048529706,-0.10343647,-0.14842407,0.04193022,0.099111564,-0.10321824,-0.03151951,-0.08813083,0.01816653,-0.174372,-0.057229925,-0.018565,-0.065113045,-0.026886111,-0.008671655,-0.16229923,0.024334487,0.15452321,0.018972332,-0.11413505,0.13020195,-0.19966812,0.0030063584,0.30134973,-0.09614736,0.05625081,-0.009159073,0.15384264,0.041702334,0.21782443,-0.12058192,0.035013463,-0.14805713,0.116181396,0.02299145,-0.09857701,0.118088506,-0.018484045,0.19034187,-0.029035967,-0.04400083,-0.12340945,-0.009601251,0.079266414,-0.20766416,0.10025178,0.035317067,0.03216269,0.016827429,0.07288833,0.07094292,0.07535956,-0.005554679,-0.0085907625,-0.047824357,0.06864922,-0.22973765,0.048447292,-0.17778029,-0.13197587,-0.22272737,-0.15092312,0.012119838,0.079774626,0.019855734,-0.021238131,0.07144044,0.01756936,0.4964235,0.096716635,-0.055587463,0.06542975,0.18285175,0.1383957,-0.034196172,-0.09985976,-0.088007346,0.16586398,0.17228244,0.2144012,0.117479935,0.01973975,-0.06528995,0.008169169,-0.17002659,0.09448391,0.0032395828,0.011848961,0.20326124,-0.049364503,0.076359235,-0.040033136,0.12288116,0.047304958,0.006401787,-0.005320299,-0.029355628,-0.020445615,-0.056633797,-0.22535904,-0.16427557,-0.15280113,0.24209967,-0.17463581,0.3793462,-0.09854597,-0.057193253,0.14605747,0.01937811,0.037701506,-0.0015639727,0.1416323,-0.017103571,-0.17346434]
        x = False in list(map(lambda x: math.isclose(x[0], x[1], abs_tol=0.00001), zip(featureVector.vector, correctVector)))
        assert not x
